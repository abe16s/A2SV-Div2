# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        visited = []
        cur = head 
        while cur:
            i = 0
            while i < len(visited):
                if visited[i] == cur:
                    return visited[i]
                i += 1
            visited.append(cur)
            cur = cur.next
        return None
