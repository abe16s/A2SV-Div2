class node:
    def __init__(self, e):
        self.val = e
        self.next = None

class MyLinkedList:

    def __init__(self):
        self.head = None
        self.tail = None
        self.size = 0

    def get(self, index: int) -> int:
        if index < 0 or index >= self.size:
            return -1 
        temp = self.head
        for i in range(index):
            temp = temp.next
        return temp.val


    def addAtHead(self, val: int) -> None:
        new_node = node(val)
        if self.head == None:
            self.tail = self.head = new_node
        else:
            temp = self.head
            new_node.next = temp
            self.head = new_node
        self.size += 1
        

    def addAtTail(self, val: int) -> None:
        new_node = node(val)
        if self.tail == None:
            self.tail = self.head = new_node
        else:
            self.tail.next = new_node
            self.tail = new_node
        self.size += 1

    def addAtIndex(self, index: int, val: int) -> None:
        if index < 0 or index > self.size:
            return 
        elif index == 0:
            self.addAtHead(val)
        elif index == self.size:
            self.addAtTail(val)
        else:
            new_node = node(val)
            current = self.head
            for i in range(1,index):
                current = current.next
            temp = current.next
            current.next = new_node
            new_node.next = temp
            self.size += 1
        

    def deleteAtIndex(self, index: int) -> None:
        if index < 0 or index >= self.size:
            return
        elif index == 0:
            self.head = self.head.next
            if self.head is None:
                self.tail = None
        elif index == self.size - 1:
            current = self.head
            for i in range(self.size - 2):
                current = current.next
            self.tail = current
            self.tail.next = None
        else:
            previous = self.head
            for i in range(1, index):
                previous = previous.next
            current = previous.next
            previous.next = current.next
        self.size -= 1


# Your MyLinkedList object will be instantiated and called as such:
# obj = MyLinkedList()
# param_1 = obj.get(index)
# obj.addAtHead(val)
# obj.addAtTail(val)
# obj.addAtIndex(index,val)
# obj.deleteAtIndex(index)
