# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        temp = head
        ctr = 0
        while temp is not None:
            temp = temp.next
            ctr += 1
        k = k%ctr 
        h = head
        for i in range(k):
            cur = h
            while cur.next.next is not None:
                cur = cur.next
            cur.next.next = h
            h = cur.next
            cur.next = None
        return h
            
